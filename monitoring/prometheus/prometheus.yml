# Prometheus configuration for DNA-Origami-AutoEncoder
# Comprehensive monitoring setup for application metrics

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'dna-origami-ae-monitor'
    environment: 'production'

# Rule files for alerting
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # DNA-Origami-AutoEncoder application metrics
  - job_name: 'dna-origami-ae-app'
    static_configs:
      - targets: ['dna-origami-ae:8080']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Python application metrics (if using prometheus_client)
  - job_name: 'dna-origami-ae-python'
    static_configs:
      - targets: ['dna-origami-ae:8000']
    scrape_interval: 15s
    metrics_path: /metrics

  # Jupyter Lab metrics
  - job_name: 'jupyter-lab'
    static_configs:
      - targets: ['jupyter:8888']
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 5s

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis:6379']
    scrape_interval: 15s
    metrics_path: /metrics

  # PostgreSQL metrics (using postgres_exporter)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 15s
    metrics_path: /metrics

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s
    metrics_path: /metrics

  # GPU metrics (if available)
  - job_name: 'nvidia-gpu'
    static_configs:
      - targets: ['gpu-exporter:9445']
    scrape_interval: 15s
    metrics_path: /metrics
    honor_labels: true

  # MinIO metrics
  - job_name: 'minio'
    static_configs:
      - targets: ['minio:9000']
    scrape_interval: 30s
    metrics_path: /minio/v2/metrics/cluster

  # Application-specific endpoints
  - job_name: 'dna-encoding-metrics'
    static_configs:
      - targets: ['dna-origami-ae:8080']
    scrape_interval: 10s
    metrics_path: /metrics/encoding
    params:
      module: ['encoding']

  - job_name: 'simulation-metrics'
    static_configs:
      - targets: ['dna-origami-ae:8080']
    scrape_interval: 30s
    metrics_path: /metrics/simulation
    params:
      module: ['simulation']

  - job_name: 'ml-training-metrics'
    static_configs:
      - targets: ['dna-origami-ae:8080']
    scrape_interval: 10s
    metrics_path: /metrics/training
    params:
      module: ['neural_network']

# Remote write configuration (for long-term storage)
remote_write:
  - url: "http://prometheus-remote-storage:9201/write"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'prometheus_.*|go_.*'
        action: drop

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 15d
    retention.size: 10GB
    wal-compression: true

# Web configuration
web:
  console.libraries: /etc/prometheus/console_libraries
  console.templates: /etc/prometheus/consoles
  enable-lifecycle: true
  enable-admin-api: true